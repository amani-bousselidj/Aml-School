# Generated by Django 4.2.3 on 2023-10-20 13:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('cover_image', models.ImageField(upload_to='course_covers/')),
                ('class_or_level', models.CharField(max_length=50)),
                ('course_preview_url', models.URLField()),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_free', models.BooleanField()),
                ('visibility', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
            ],
        ),
           migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='VideoLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('video_url', models.URLField()),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('summary', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_title', models.CharField(max_length=100)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.course')),
                    ('quiz',models.OneToOneField('Quiz', on_delete=models.CASCADE, blank=True, null=True)),

            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homework_date', models.DateField()),
                ('submission_date', models.DateField()),
                ('document', models.FileField(upload_to='homework_documents/')),
                ('description', models.TextField()),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.class')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('lesson_type', models.CharField(choices=[('video', 'Video'), ('pdf', 'PDF'), ('text', 'Text'), ('document', 'Document')], max_length=20)),
                ('video_provider', models.CharField(blank=True, max_length=20, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('inline_preview_image', models.ImageField(upload_to='lesson_images/')),
                ('summary_of_lesson', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_issued', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
            ],
        ),
     
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_number', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('student_name', models.CharField(max_length=255)),
                ('class_name', models.CharField(max_length=50)),
                ('birthday', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('mobile_phone_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Student'), ('parent', 'Parent'), ('teacher', 'Teacher')], max_length=10)),
                ('telephone', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('birthday', models.DateField(blank=True, default=None, null=True)),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personnel_id', models.CharField(blank=True, max_length=20, null=True)),
                ('role_teacher', models.CharField(blank=True, max_length=50)),
                ('designation_faculty', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('basic_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('type_of_contract', models.CharField(blank=True, max_length=50, null=True)),
                ('work_shift', models.CharField(blank=True, max_length=50, null=True)),
                ('work_location', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_date', models.DateField(null=True)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gender', models.CharField(max_length=10, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('syllabus_status', models.IntegerField()),
                ('Student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.student')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.course')),
            ],
        ),
        migrations.CreateModel(
            name='SubmitedHomworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachement', models.FileField(upload_to='students_homework_documents/')),
                ('SubmissionDate', models.DateField()),
                ('Homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.homework')),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disabled', models.BooleanField(default=False)),
                ('last_video_index', models.SmallIntegerField(default=0)),
                ('last_chapter_index', models.SmallIntegerField(default=0)),
                ('finished', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.course')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(default=0)),
                ('quizz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='SchoolManage.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='SchoolManage.choice')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='SchoolManage.studentattempt')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='parents',
            field=models.ManyToManyField(limit_choices_to={'role': 'parent'}, related_name='children', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_create', models.DateField(auto_now=True)),
                ('courses', models.ManyToManyField(to='SchoolManage.course')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=50)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.class')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='SchoolManage.course')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct_answer', models.BooleanField(default=False)),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.choice')),
                ('question', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.question')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.quiz'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('p', 'Pending'), ('a', 'Accepted'), ('r', 'Refused')], default='p', max_length=30)),
                ('order', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.order')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Parent_name', models.CharField(blank=True, max_length=255, null=True)),
                ('Parent_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('Parent_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('children', models.ManyToManyField(limit_choices_to={'role': 'student'}, related_name='parents', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='buyer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.course'),
        ),
        migrations.CreateModel(
            name='OnlineExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_title', models.CharField(max_length=255)),
                ('exam_from_date', models.DateField()),
                ('exam_to_date', models.DateField()),
                ('auto_result_publish_date', models.DateTimeField()),
                ('time_duration', models.DurationField()),
                ('attempt', models.IntegerField()),
                ('description', models.TextField()),
                ('teacher', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='LiveMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_title', models.CharField(max_length=255)),
                ('meeting_date_time', models.DateTimeField()),
                ('meeting_url', models.URLField()),
                ('Organizer', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('time_from', models.TimeField()),
                ('time_to', models.TimeField()),
                ('lecture_youtube_url', models.URLField(blank=True, default=None)),
                ('attachment', models.FileField(blank=True, upload_to='lesson_plan_attachments/')),
                ('lecture_video', models.FileField(blank=True, upload_to='lesson_plan_lecture_videos/')),
                ('general_objectives', models.TextField()),
                ('presentation_text_area', models.TextField()),
                ('class_name', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.class')),
                ('lesson', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.lesson')),
                ('section_name', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.section')),
                ('subject', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.subject')),
                ('teacher', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='LessonOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('course_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.coursesection')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.lesson')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='Subject',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.subject'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.teacher'),
        ),
        migrations.AddField(
            model_name='homework',
            name='section',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.section'),
        ),
        migrations.AddField(
            model_name='homework',
            name='subject',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.subject'),
        ),
        migrations.AddField(
            model_name='homework',
            name='teacher',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.teacher'),
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_title', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('result', models.DecimalField(decimal_places=2, max_digits=5)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.class')),
                ('section_name', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.section')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.student')),
            ],
        ),
        migrations.AddField(
            model_name='coursesection',
            name='lessons',
            field=models.ManyToManyField(blank=True, through='SchoolManage.LessonOrder', to='SchoolManage.lesson'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='quiz',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.quiz'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='video_lessons',
            field=models.ManyToManyField(blank=True, to='SchoolManage.videolesson'),
        ),
        migrations.AddField(
            model_name='course',
            name='assign_teacher',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.teacher'),
        ),
        migrations.AddField(
            model_name='course',
            name='course_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.coursecategory'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.question'),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_image', models.ImageField(upload_to='certificate_upload_dir/')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SchoolManage.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
